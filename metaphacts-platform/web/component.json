{
  "$schema": "../../project/jsonSchemas/ComponentJson.schema.json",

  "semantic-link": {
    "path": "platform/components/navigation/ResourceLinkComponent.ts",
    "propsSchema": "ResourceLinkConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "semantic-link-container": {
    "path": "platform/components/navigation/ResourceLinkContainer.ts",
    "propsSchema": "ResourceLinkContainerConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "semantic-table-deprecated": {
    "path": "platform/components/semantic/table/SemanticTable.ts",
    "deferAttributes": {
      "tuple-template": true,
      "no-result-template": true
    },
    "deferJsonProperties": {
      "column-configuration": {
        "cellTemplate": true
      }
    },
    "propsSchema": "SemanticTableConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticTable"
  },
  "semantic-table-row-selection": "platform/components/semantic/table/TableSelectionComponent.ts",

  "semantic-table": {
    "path": "platform/components/semantic/data-table/SemanticDataTable.tsx",
    "deferAttributes": {
      "tuple-template": true,
      "no-result-template": true
    },
    "deferJsonProperties": {
      "column-configuration": {
        "cellTemplate": true,
        "aggregationCellTemplate": true
      },
      "options": {
        "defaultCellTemplate": true,
        "defaultAggregationCellTemplate": true
      }
    },
    "propsSchema": "SemanticDataTableConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticTable"
  },

  "semantic-query": {
    "path": "platform/components/semantic/query/SemanticQuery.ts",
    "deferAttributes": {
      "template": true,
      "no-result-template": true
    },
    "propsSchema": "SemanticQueryConfig",
    "additionalSchemas": ["SemanticQueryTemplateData"],
    "helpResource": "http://help.metaphacts.com/resource/SemanticQuery"
  },
  "semantic-carousel": {
    "path": "platform/components/semantic/carousel/SemanticCarousel.ts",
    "deferAttributes": {
      "tuple-template": true,
      "no-result-template": true
    },
    "propsSchema": "SemanticCarouselConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticCarousel"
  },
  "semantic-chart": {
    "path": "platform/components/semantic/chart/SemanticChart.ts",
    "deferAttributes": {
      "tooltip-template": true,
      "no-result-template": true
    },
    "propsSchema": "SemanticChartConfig",
    "additionalSchemas": ["ChartTooltipData"],
    "helpResource": "http://help.metaphacts.com/resource/SemanticChart"
  },
  "semantic-chart-type-selector": {
    "path": "platform/components/semantic/chart/SemanticChartTypeSelector.tsx",
    "propsSchema": "SemanticChartTypeSelectorConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticChart"
  },
  "semantic-tree": {
    "path": "platform/components/semantic/tree/SemanticTree.ts",
    "deferAttributes": {
      "tuple-template": true,
      "no-result-template": true
    },
    "propsSchema": "SemanticTreeConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticTree"
  },
  "semantic-map": {
    "path": "platform/components/semantic/map/SemanticMap.ts",
    "deferAttributes": {
      "tuple-template": true,
      "no-result-template": true
    },
    "propsSchema": "SemanticMapConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticMap"
  },

  "semantic-graph": {
    "path": "platform/components/semantic/graph/SemanticGraph.ts",
    "deferAttributes": {
      "no-result-template": true
    },
    "propsSchema": "SemanticGraphConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-extension-expand-collapse": {
    "path": "platform/components/semantic/graph/extensions/CytoscapeExpandCollapse.ts",
    "propsSchema": "SemanticGraphExpandCollapseExtensionConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-extension-navigator": {
    "path": "platform/components/semantic/graph/extensions/CytoscapeNavigator.ts",
    "propsSchema": "SemanticGraphNavigatorExtensionConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-extension-panzoom": {
    "path": "platform/components/semantic/graph/extensions/CytoscapePanZoomExtension.ts",
    "propsSchema": "SemanticGraphPanZoomExtensionConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-breadthfirst": {
    "path": "platform/components/semantic/graph/layouts/BreadthFirstLayout.ts",
    "propsSchema": "SemanticGraphBreadthFirstLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-circle": {
    "path": "platform/components/semantic/graph/layouts/CircleLayout.ts",
    "propsSchema": "SemanticGraphCircleLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-concentric": {
    "path": "platform/components/semantic/graph/layouts/ConcentricLayout.ts",
    "propsSchema": "SemanticGraphConcentricLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-cose-bilkent": {
    "path": "platform/components/semantic/graph/layouts/CoseBilkentLayout.ts",
    "propsSchema": "SemanticGraphCoseBilkentLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-cose": {
    "path": "platform/components/semantic/graph/layouts/CoseLayout.ts",
    "propsSchema": "SemanticGraphCoseLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-grid": {
    "path": "platform/components/semantic/graph/layouts/GridLayout.ts",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },
  "semantic-graph-layout-preset": {
    "path": "platform/components/semantic/graph/layouts/PresetLayout.ts",
    "propsSchema": "SemanticGraphPresetLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticGraph"
  },

  "semantic-search": {
    "path": "platform/components/semantic/search/web-components/SemanticSearch.ts",
    "propsSchema": "SemanticSearchConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticSearch"
  },
  "semantic-search-query-keyword": {
    "path": "platform/components/semantic/search/web-components/KeywordSearch.tsx",
    "propsSchema": "SemanticSearchKeywordConfig",
    "helpResource": "http://help.metaphacts.com/resource/KeywordSearch"
  },
  "semantic-search-keyword-prefetch": {
    "path": "platform/components/semantic/search/web-components/KeywordPrefetchSearch.tsx",
    "propsSchema": "KeywordPrefetchSearchConfig",
    "helpResource": "http://help.metaphacts.com/resource/KeywordPrefetchSearch"
  },
  "semantic-search-query-entities": {
    "path": "platform/components/semantic/search/web-components/EntitySearch.tsx",
    "deferAttributes": {
      "template": true
    }
  },
  "semantic-search-query-chemical-drawing": {
    "path": "platform/components/semantic/search/web-components/ChemcialDrawingSearch.tsx",
    "propsSchema": "ChemicalDrawingSearchConfig"
  },
  "semantic-search-query-constant": {
    "path": "platform/components/semantic/search/web-components/QueryConstant.tsx",
    "propsSchema": "SemanticSearchQueryConstantConfig",
    "helpResource": "http://help.metaphacts.com/resource/ConstantSearch"
  },
  "semantic-search-result": {
    "path": "platform/components/semantic/search/web-components/SemanticSearchResult.tsx",
    "propsSchema": "SemanticSearchResultConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticSearch"
  },
  "semantic-search-result-holder": {
    "path": "platform/components/semantic/search/web-components/SemanticSearchResultHolder.tsx",
    "propsSchema": "SemanticSearchResultHolderConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticSearch"
  },
  "semantic-search-form-query": {
    "path": "platform/components/semantic/search/web-components/SemanticSearchFormQuery.tsx",
    "propsSchema": "SemanticFormBasedQueryConfig",
    "helpResource": "http://help.metaphacts.com/resource/FormBasedSearch"
  },
  "semantic-search-domain-switch": {
    "path": "platform/components/semantic/search/web-components/SemanticSearchDomainSwitch.tsx",
    "propsSchema": "SemanticSearchDomainSwitchConfig"
  },
  "semantic-search-table-result": {
    "path": "platform/components/semantic/search/web-components/SemanticSearchTableResult.tsx",
    "propsSchema": "SemanticSearchTableResultConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticSearch"
  },
  "semantic-search-configuration-selector": {
    "path": "researchspace/components/search/configuration/ConfigurationSelector",
    "propsSchema": "SemanticSearchConfigurationSelectorConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticSearch"
  },

  "semantic-simple-search": {
    "path": "platform/components/semantic/simple-search/SimpleSearch.ts",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "SemanticSimpleSearchConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticSimpleSearch"
  },

  "semantic-if": {
    "path": "platform/components/semantic/conditional/SemanticIf.tsx",
    "deferAttributes": {
      "then": true,
      "else": true
    },
    "propsSchema": "SemanticIfConfig",
    "helpResource": "http://help.metaphacts.com/resource/FrontendTemplating"
  },
  "semantic-switch": {
    "path": "platform/components/semantic/conditional/SemanticSwitch.tsx",
    "deferAttributes": {
      "cases": true
    },
    "propsSchema": "SemanticSwitchConfig",
    "helpResource": "http://help.metaphacts.com/resource/FrontendTemplating"
  },
  "semantic-update": {
    "path": "platform/components/semantic/update/SemanticUpdate.tsx",
    "propsSchema": "SemanticUpdateConfig",
    "additionalSchemas": ["SemanticUpdateEventData"],
    "helpResource": "http://help.metaphacts.com/resource/SemanticUpdate"
  },
  "semantic-context": {
    "path": "platform/api/components/SemanticContext.ts",
    "propsSchema": "SemanticContextProps",
    "helpResource": "http://help.metaphacts.com/resource/SemanticContext"
  },

  "mp-link": {
    "path": "platform/components/navigation/Link.ts",
    "propsSchema": "LinkConfig"
  },
  "mp-resource-link": {
    "path": "platform/components/navigation/ResourceLinkComponent.ts",
    "propsSchema": "ResourceLinkConfig"
  },
  "mp-resource-link-container": {
    "path": "platform/components/navigation/ResourceLinkContainer.ts",
    "propsSchema": "ResourceLinkContainerConfig"
  },
  "mp-resource-thumbnail": {
    "path": "platform/components/ui/thumbnail/ResourceThumbnail.ts",
    "propsSchema": "ResourceThumbnailConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-resource-thumbnail-fallback": {
    "path": "platform/components/ui/thumbnail/NoResourceThumbnail.ts",
    "propsSchema": "NoResourceThumbnailConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-navigate-to-resource": "platform/components/navigation/NavigateToIri.tsx",

  "mp-event-trigger": {
    "path": "platform/components/events/EventTrigger.ts",
    "propsSchema": "EventTriggerConfig",
    "helpResource": "http://help.metaphacts.com/resource/EventSystem"
  },
  "mp-event-proxy": {
    "path": "platform/components/events/EventProxy.ts",
    "propsSchema": "EventProxyConfig",
    "helpResource": "http://help.metaphacts.com/resource/EventSystem"
  },
  "mp-event-target-refresh": {
    "path": "platform/components/events/EventTargetRefresh.ts",
    "propsSchema": "EventTargetRefreshConfig",
    "helpResource": "http://help.metaphacts.com/resource/EventSystem"
  },
  "mp-event-target-template-render": {
    "path": "platform/components/events/EventTargetTemplateRender.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "EventTargetTemplateRenderConfig",
    "helpResource": "http://help.metaphacts.com/resource/EventSystem"
  },
  "mp-event-target-redirect": {
    "path": "platform/components/ui/redirect-action/RedirectAction.ts",
    "propsSchema": "RedirectActionProps",
    "additionalSchemas": ["EventTargetRedirectEventData"],
    "helpResource": "http://help.metaphacts.com/resource/EventSystem"
  },

  "field-editor": "platform/components/forms/field-editor/FieldEditorComponent.ts",
  "mp-field-editor": {
    "path": "platform/components/forms/field-editor/FieldEditorComponent.ts",
    "propsSchema": "FieldEditorConfig"
  },
  "semantic-form": {
    "path": "platform/components/forms/ResourceEditorForm.ts",
    "deferAttributes": {
      "new-subject-template": true
    },
    "deferJsonProperties": {
      "persistence": {
        "endpointTemplate": true
      }
    },
    "propsSchema": "ResourceEditorFormConfig",
    "additionalSchemas": ["SemanticFormEventData"],
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "sari-resource-thumbnail": {
    "path": "platform/components/ui/thumbnail/ResourceThumbnailExtended.ts",
    "deferAttributes": {
      "template": true,
      "no-result-template": true
    },
    "propsSchema": "ResourceThumbnailConfig",
  },
  "semantic-form-switch": {
    "path": "platform/components/forms/inputs/FormSwitch.tsx",
    "propsSchema": "SemanticFormSwitchConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-switch-case": {
    "path": "platform/components/forms/inputs/FormSwitchCase.tsx",
    "propsSchema": "SemanticFormSwitchCaseConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-text-input": {
    "path": "platform/components/forms/inputs/PlainTextInput.tsx",
    "propsSchema": "SemanticFormTextInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-hidden-input": {
    "path": "platform/components/forms/inputs/HiddenInput.ts",
    "propsSchema": "SemanticFormHiddenInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-select-input": {
    "path": "platform/components/forms/inputs/SelectInput.ts",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "SemanticFormSelectInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-checklist-input": {
    "path": "platform/components/forms/inputs/ChecklistInput.tsx",
    "propsSchema": "SemanticFormChecklistInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-checkbox-input": {
    "path": "platform/components/forms/inputs/CheckboxInput.tsx",
    "propsSchema": "SemanticFormCheckboxInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-autocomplete-input": {
    "path": "platform/components/forms/inputs/AutocompleteInput.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "SemanticFormAutocompleteInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-datetime-input": {
    "path": "platform/components/forms/inputs/DatePickerInput.ts",
    "propsSchema": "SemanticFormDatePickerInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-composite-input": {
    "path": "platform/components/forms/inputs/CompositeInput.ts",
    "deferAttributes": {
      "new-subject-template": true
    },
    "propsSchema": "SemanticFormCompositeInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-tree-picker-input": {
    "path": "platform/components/forms/inputs/TreePickerInput.tsx",
    "propsSchema": "SemanticFormTreePickerInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-subject-input": {
    "path": "platform/components/forms/static/SubjectInput.tsx",
    "propsSchema": "SemanticFormSubjectInputConfig"
  },
  "semantic-form-recover-notification": {
    "path": "platform/components/forms/static/RecoverNotification.ts",
    "propsSchema": "SemanticFormRecoverNotificationConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-errors": {
    "path": "platform/components/forms/static/FormErrors.tsx",
    "propsSchema": "SemanticFormErrorsConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticForm"
  },
  "semantic-form-template": {
    "path": "platform/components/forms/static/FormTemplate.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "SemanticFormTemplateConfig"
  },
  "semantic-form-field-label": {
    "path": "platform/components/forms/static/FieldLabel.tsx",
    "propsSchema": "SemanticFormFieldLabelConfig"
  },
  "semantic-form-field-description": {
    "path": "platform/components/forms/static/FieldDescription.tsx",
    "propsSchema": "SemanticFormFieldDescriptionConfig"
  },

  "semantic-tree-input": "platform/components/semantic/lazy-tree/SemanticTreeInput.ts",
  "semantic-lazy-tree": {
    "path": "platform/components/semantic/lazy-tree/SemanticLazyTree.tsx",
    "deferAttributes": {
      "node-template": true,
      "no-result-template": true
    },
    "propsSchema": "SemanticLazyTreeConfig",
    "additionalSchemas": [
      "SemanticLazyTreeEventData",
      "SemanticLazyTreeTemplateData"
    ],
    "helpResource": "http://help.metaphacts.com/resource/SemanticLazyTree"
  },
  "mp-field-visualization": {
    "path": "platform/components/forms/FieldBasedVisualization.ts",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "FieldBasedVisualizationConfig"
  },

  "mp-code-highlight": {
    "path": "platform/components/documentation/CodeHighlight.ts",
    "propsSchema": "CodeHighlightConfig"
  },
  "mp-code-example": {
    "path": "platform/components/documentation/CodeExample.tsx",
    "propsSchema": "CodeExampleConfig"
  },
  "mp-code-block": {
    "path": "platform/components/documentation/CodeBlock.tsx",
    "propsSchema": "CodeBlockConfig"
  },
  "mp-anonymous-hidden": {
    "path": "platform/components/security/AnonymousHidden.ts",
    "deferAttributes": {
      "alt": true
    },
    "propsSchema": "AnonymousHiddenConfig"
  },
  "mp-has-permission": {
    "path": "platform/components/security/HasPermission.tsx",
    "propsSchema": "HasPermissionConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-error": {
    "path": "platform/components/ui/notification/ErrorNotification.tsx",
    "propsSchema": "ErrorNotificationConfig"
  },
  "mp-user-language-switch": {
    "path": "platform/components/language-switch/UserLanguageSwitch.tsx",
    "propsSchema": "UserLanguageSwitchConfig"
  },

  "mp-graph-store-action": {
    "path": "platform/components/admin/rdf-upload/GraphActionLink.ts",
    "propsSchema": "GraphStoreActionConfig"
  },
  "mp-rdf-upload": {
    "path": "platform/components/admin/rdf-upload/RdfUpload.tsx",
    "deferAttributes": {
      "placeholder-template": true
    },
    "propsSchema": "RdfUploadConfig"
  },
  "mp-file-upload": "platform/components/admin/file-upload/FileUpload.tsx",
  "mp-app-upload": "platform/components/admin/app-upload/AppUpload.tsx",
  "mp-app-remove": "platform/components/admin/app-upload/AppRemoveAction.tsx",
  "mp-page-loader": {
    "path": "platform/components/ui/page-loader.ts",
    "propsSchema": "PageLoaderConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "semantic-form-file-input": {
    "path": "platform/components/forms/file-manager/FileInput.tsx",
    "propsSchema": "FileInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/SemanticFormAdvancedInputs"
  },
  "mp-direct-file-uploader": {
    "path": "platform/components/forms/file-manager/DirectFileUploader.tsx",
    "propsSchema": "DirectFileUploaderConfig"
  },
  "mp-file-uploader": {
    "path": "platform/components/forms/file-manager/FileUploader.tsx",
    "propsSchema": "FileUploaderConfig"
  },
  "mp-file-visualizer": {
    "path": "platform/components/forms/file-manager/FileVisualizer.tsx",
    "propsSchema": "FileVisualizerConfig"
  },
  "mp-create-ontology": {
    "path": "platform/components/ontology/CreateOntology.tsx",
    "propsSchema": "CreateOntologyConfig"
  },

  "mp-admin-page-manager": "platform/components/admin/page-manager/PageManager.ts",
  "mp-admin-namespace-manager": "platform/components/admin/namespace-manager/NamespaceManager.tsx",
  "mp-admin-add-prefixes": "platform/components/admin/namespace-manager/AddPrefixes.tsx",
  "mp-admin-create-new-page": "platform/components/admin/create-new-page/CreateNewPage.tsx",
  "mp-admin-config-manager": "platform/components/admin/config-manager/ConfigManager.tsx",
  "mp-admin-cache-invalidation-button": "platform/components/admin/CacheInvalidationButton.ts",
  "mp-admin-repository-mgmt": "platform/components/admin/repositories/RepositoryManager.tsx",
  "mp-admin-log-browser": "platform/components/admin/log-browser/LogBrowser.tsx",
  "mp-admin-repository-switch": "platform/components/admin/repository-switch/RepositorySwitch.tsx",
  "mp-admin-page-view-config-editor": "platform/components/admin/page-view-config/PageViewConfigEditor.tsx",
  "mp-logging-profile-selector": "platform/components/admin/log-browser/LoggingProfileSelector.tsx",
  "mp-logging-level-selector": "platform/components/admin/log-browser/LoggingLevelSelector.tsx",
  "mp-restart-wrapper": "platform/components/admin/RestartWrapper.tsx",
  "mp-account-manager": "platform/components/admin/realm-manager/AccountManagerComponent.ts",
  "mp-account-permission-check":"platform/components/admin/realm-manager/PermissionCheck.tsx",

  "mp-sparql-download": {
    "path": "platform/components/semantic/results/SparqlDownloadComponent.ts",
    "propsSchema": "SparqlDownloadConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-sparql-result-counts": {
    "path": "platform/components/semantic/results/ResultsNumber.ts",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "SparqlResultsNumberConfig"
  },

  "mp-ldp-remove-from-container-action": {
    "path": "platform/components/ldp/RemoveFromContainerAction.ts",
    "propsSchema": "LdpRemoveFromContainerActionConfig"
  },
  "mp-ldp-create-new-resource-action": {
    "path": "platform/components/ldp/CreateNewResource.ts",
    "propsSchema": "LdpCreateNewResourceActionConfig"
  },
  "mp-ldp-duplicate-resource-action": {
    "path": "platform/components/ldp/DuplicateResource.ts",
    "propsSchema": "LdpDuplicateResourceActionConfig"
  },
  "mp-ldp-export-resource": {
    "path": "platform/components/ldp/ExportResource.ts",
    "propsSchema": "LdpExportResourceConfig"
  },
  "mp-ldp-import-resource": {
    "path": "platform/components/ldp/ImportResource.tsx",
    "propsSchema": "LdpImportResourceConfig"
  },

  "mp-overlay-dialog": {
    "path": "platform/components/ui/overlay/OverlayDialog.ts",
    "propsSchema": "OverlayComponentConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-overlay-dialog-content": {
    "path": "platform/components/ui/overlay/OverlayDialogContent.ts",
    "propsSchema": "OverlayDialogContentConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-overlay-dialog-trigger": {
    "path": "platform/components/ui/overlay/OverlayDialogTrigger.ts",
    "propsSchema": "OverlayDialogTriggerConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "mp-anchor": {
    "path": "platform/components/ui/scrollchor.ts",
    "propsSchema": "ScrollAnchorConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "mp-platform-url": "platform/components/ui/platform-url.ts",

  "mp-nav-account": "platform/app/navbar/NavAccountComponent.tsx",

  "mp-internal-page-editor": "platform/app/page/PageEditor.tsx",
  "mp-internal-sparql-endpoint": "platform/app/sparql/SparqlEndpoint.ts",

  "mp-draggable": {
    "path": "platform/components/dnd/DraggableComponent.ts",
    "propsSchema": "DraggableConfig"
  },

  "mp-print": {
    "path": "platform/components/ui/print/PrintComponent.tsx",
    "propsSchema": "PrintComponentConfig"
  },
  "mp-print-section": {
    "path": "platform/components/ui/print/PrintSectionComponent.ts",
    "propsSchema": "PrintSectionConfig"
  },

  "mp-splitpane": {
    "path": "platform/components/ui/splitpane/SplitPaneComponent.ts",
    "propsSchema": "SplitPaneConfig",
    "additionalSchemas": ["SplitPaneEventData"],
    "helpResource": "http://help.metaphacts.com/resource/MPSplitPaneComponent"
  },
  "mp-splitpane-sidebar-closed": {
    "path": "platform/components/ui/splitpane/SplitPaneSidebarClosedComponent.ts",
    "propsSchema": "SplitPaneSidebarClosedConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPSplitPaneComponent"
  },
  "mp-splitpane-sidebar-open": {
    "path": "platform/components/ui/splitpane/SplitPaneSidebarOpenComponent.ts",
    "propsSchema": "SplitPaneSidebarOpenConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPSplitPaneComponent"
  },
  "mp-splitpane-toggle-on": {
    "path": "platform/components/ui/splitpane/SplitPaneToggleOnComponent.ts",
    "propsSchema": "SplitPaneToggleOnConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPSplitPaneComponent"
  },
  "mp-splitpane-toggle-off": {
    "path": "platform/components/ui/splitpane/SplitPaneToggleOffComponent.ts",
    "propsSchema": "SplitPaneToggleOffConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPSplitPaneComponent"
  },

  "mp-label": {
    "path": "platform/components/ui/resource-label.ts",
    "propsSchema": "ResourceLabelConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-description": {
    "path": "platform/components/ui/resource-description.tsx",
    "deferAttributes": {
      "template": true,
      "no-result-template": true
    },
    "propsSchema": "DescriptionConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },
  "mp-highlight": {
    "path": "platform/components/ui/highlight/HighlightComponent.ts",
    "propsSchema": "HighlightConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "mp-popover": {
    "path": "platform/components/ui/popover/PopoverComponent.tsx",
    "propsSchema": "PopoverConfig",
    "helpResource": "http://help.metaphacts.com/resource/ReactBootstrap"
  },
  "mp-popover-trigger": {
    "path": "platform/components/ui/popover/PopoverTriggerComponent.tsx",
    "propsSchema": "PopoverTriggerConfig",
    "helpResource": "http://help.metaphacts.com/resource/ReactBootstrap"
  },
  "mp-popover-content": {
    "path": "platform/components/ui/popover/PopoverContentComponent.tsx",
    "propsSchema": "PopoverContentConfig",
    "helpResource": "http://help.metaphacts.com/resource/ReactBootstrap"
  },

  "mp-collapsible-div": {
    "path": "platform/components/ui/collapsible-div/CollapsibleDiv.tsx",
    "propsSchema": "CollapsibleDivConfig"
  },
  "mp-collapsible-div-trigger": {
    "path": "platform/components/ui/collapsible-div/CollapsibleDivTrigger.tsx",
    "propsSchema": "CollapsibleDivTriggerConfig"
  },
  "mp-collapsible-div-content": {
    "path": "platform/components/ui/collapsible-div/CollapsibleDivContent.tsx",
    "propsSchema": "CollapsibleDivContentConfig"
  },

  "mp-panel": "platform/components/ui/panel/Panel.tsx",
  "mp-panel-header": "platform/components/ui/panel/PanelHeader.tsx",
  "mp-panel-body": "platform/components/ui/panel/PanelBody.tsx",
  "mp-panel-footer": "platform/components/ui/panel/PanelFooter.tsx",

  "mp-text-truncate": {
    "path": "platform/components/ui/truncate/TextTruncate.tsx",
    "deferAttributes": {
      "truncate": true,
      "expand": true,
      "collapse": true
    },
    "propsSchema": "TextTruncateConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "mp-set-management": {
    "path": "platform/components/sets/SetManagement.tsx",
    "deferJsonProperties": {
      "item-config": {
        "gridTemplate": true,
        "listTemplate": true
      }
    },
    "propsSchema": "SetManagementConfig",
    "additionalSchemas": ["SetManagementEventData"]
  },
  "mp-set-management-action-remove-set-item": "platform/components/sets/actions/RemoveSetItemAction.ts",
  "mp-set-management-action-fetch-set-items": "platform/components/sets/actions/FetchSetItemsAction.ts",
  "mp-set-management-action-remove-set": "platform/components/sets/actions/RemoveSetAction.tsx",
  "mp-set-management-action-manage-set": "platform/components/sets/actions/ManageSetAction.ts",
  "mp-set-management-action-rename-set": "platform/components/sets/actions/RenameSetAction.ts",
  "mp-set-management-single-set": {
    "path": "platform/components/sets/SingleSet.tsx",
    "deferJsonProperties": {
      "item-config": {
        "gridTemplate": true,
        "listTemplate": true
      }
    },
    "propsSchema": "SingleSetConfig"
  },
  "mp-create-set-action": "platform/components/sets/CreateSetActionComponent.tsx",

  "mp-component-toolbar": "platform/components/persistence/ComponentToolbar.ts",
  "mp-component-toolbar-actions": "platform/components/persistence/ComponentToolbarActions.ts",
  "mp-component-toolbar-component": "platform/components/persistence/ComponentToolbarComponent.ts",
  "mp-component-toolbar-action-download": "platform/components/persistence/ActionDownload.ts",
  "mp-component-toolbar-action-save": "platform/components/persistence/ActionSave.ts",
  "mp-persisted-component": "platform/components/persistence/PersistedComponent.tsx",

  "mp-url-minifier": "platform/components/ui/url-minifier.ts",

  "mp-documentation": {
    "path": "platform/components/documentation/ConfigDocComponent.ts",
    "propsSchema": "ConfigDocConfig"
  },

  "mp-spin-query-template-editor": {
    "path": "platform/components/query-editor/QueryTemplate.tsx",
    "propsSchema": "QueryTemplateConfig"
  },
  "mp-spin-query-editor": "platform/components/query-editor/QueryEditorComponent.ts",

  "mp-sparql-query-editor": "platform/components/sparql-editor/SparqlQueryEditor.tsx",
  "mp-sparql-query-editor-context": "platform/components/sparql-editor/SparqlQueryEditorContext.ts",
  "mp-recent-queries": "platform/components/sparql-editor/RecentQueries.tsx",
  "mp-query-catalog-template": "platform/components/sparql-editor/QueryCatalogTemplate.tsx",

  "mp-selection-toggle": {
    "path": "platform/components/ui/selection/SelectionToggleComponent.tsx",
    "propsSchema": "SelectionToggleConfig",
    "helpResource": "http://help.metaphacts.com/resource/MultipleSelection"
  },
  "mp-selection-action-choice": {
    "path": "platform/components/ui/selection/SelectionActionChoiceComponent.tsx",
    "propsSchema": "SelectionActionChoiceConfig",
    "helpResource": "http://help.metaphacts.com/resource/MultipleSelection"
  },
  "mp-selection-group": {
    "path": "platform/components/ui/selection/SelectionGroupComponent.tsx",
    "propsSchema": "SelectionGroupConfig",
    "helpResource": "http://help.metaphacts.com/resource/MultipleSelection"
  },

  "mp-protein-viewer": "platform/components/3-rd-party/ProteinViewer.ts",
  "mp-smiles-code-drawer": "platform/components/3-rd-party/SmilesCodeDrawer.tsx",
  "ontodia": {
    "path": "platform/components/3-rd-party/ontodia/Ontodia.tsx",
    "propsSchema": "OntodiaConfig",
    "additionalSchemas": [
      "OntodiaTriggerEventData",
      "OntodiaListenEventData"
    ],
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "diagram-search-result": {
    "path": "platform/components/3-rd-party/ontodia/DiagramSearchResult.tsx",
    "propsSchema": "DiagramSearchResultConfig"
  },
  "ontodia-nested-nodes": {
    "path": "platform/components/3-rd-party/ontodia/OntodiaNestedNodes.ts",
    "propsSchema": "OntodiaNestedNodes"
  },
  "ontodia-contents": {
    "path": "platform/components/3-rd-party/ontodia/OntodiaContents.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "OntodiaContentsConfig"
  },
  "ontodia-canvas": {
    "path": "platform/components/3-rd-party/ontodia/CanvasComponent.ts",
    "deferAttributes": {
      "node-templates": true,
      "default-node-template": true,
      "default-edge-property-template": true
    },
    "deferJsonProperties": {
      "edge-property-groups": {
        "template": true
      }
    },
    "propsSchema": "OntodiaCanvasConfig",
    "additionalSchemas": [
      "OntodiaCanvasEventData",
      "OntodiaEdgePropertyGroupTemplateData",
      "OntodiaElementTemplateData"
    ],
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-class-tree": {
    "path": "platform/components/3-rd-party/ontodia/ClassTree.tsx",
    "propsSchema": "ClassTreeConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-instances-search": {
    "path": "platform/components/3-rd-party/ontodia/InstancesSearch.tsx",
    "propsSchema": "InstancesSearchConfig",
    "additionalSchemas": ["InstancesSearchEventData"],
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-connections": {
    "path": "platform/components/3-rd-party/ontodia/LinkTypesToolbox.ts",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-element-search": {
    "path": "platform/components/3-rd-party/ontodia/ElementSearchComponent.ts",
    "propsSchema": "ElementSearchConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-edit-entity-panel": "platform/components/3-rd-party/ontodia/EditEntityPanel.tsx",
  "ontodia-canvas-widget": {
    "path": "platform/components/3-rd-party/ontodia/CanvasWidget.ts",
    "propsSchema": "CanvasWidgetConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-navigation-menu": {
    "path": "platform/components/3-rd-party/ontodia/NavigationMenu.tsx",
    "propsSchema": "OntodiaNavigationMenuConfig"
  },
  "ontodia-navigator": {
    "path": "platform/components/3-rd-party/ontodia/Navigator.tsx",
    "propsSchema": "NavigatorWidgetConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-halo": {
    "path": "platform/components/3-rd-party/ontodia/Halo.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "OntodiaHaloConfig",
    "additionalSchemas": ["OntodiaHaloTemplateData"],
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-halo-link": {
    "path": "platform/components/3-rd-party/ontodia/HaloLink.ts",
    "propsSchema": "OntodiaHaloLinkConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-toolbar": {
    "path": "platform/components/3-rd-party/ontodia/ToolbarComponent.ts",
    "propsSchema": "ToolbarConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-save-button": {
    "path": "platform/components/3-rd-party/ontodia/SaveButton.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "OntodiaSaveButtonConfig",
    "additionalSchemas": ["SaveButtonTemplateData"],
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-field-configuration": {
    "path": "platform/components/3-rd-party/ontodia/authoring/OntodiaFieldConfiguration.ts",
    "deferAttributes": {
      "default-subject-template": true
    },
    "propsSchema": "OntodiaFieldConfigurationConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-entity-metadata": {
    "path": "platform/components/3-rd-party/ontodia/authoring/OntodiaEntityMetadata.ts",
    "deferAttributes": {
      "new-subject-template": true
    },
    "propsSchema": "OntodiaEntityMetadataConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-link-metadata": {
    "path": "platform/components/3-rd-party/ontodia/authoring/OntodiaLinkMetadata.tsx",
    "deferAttributes": {
      "new-subject-template": true
    },
    "propsSchema": "OntodiaLinkMetadataConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-field-input-override": {
    "path": "platform/components/3-rd-party/ontodia/authoring/FieldInputOverride.tsx",
    "propsSchema": "OntodiaFieldInputOverrideConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-form-override": {
    "path": "platform/components/3-rd-party/ontodia/authoring/FormOverride.tsx",
    "propsSchema": "OntodiaFormOverrideConfig"
  },
  "ontodia-inline-entity-input": {
    "path": "platform/components/3-rd-party/ontodia/authoring/InlineEntityInput.tsx",
    "propsSchema": "OntodiaInlineEntityInputConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-data-providers": {
    "path": "platform/components/3-rd-party/ontodia/data/OntodiaDataProviders.ts",
    "propsSchema": "OntodiaDataProvidersConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-rdf-provider": {
    "path": "platform/components/3-rd-party/ontodia/data/OntodiaRdfDataProvider.ts",
    "propsSchema": "OntodiaRdfDataProviderConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },
  "ontodia-sparql-provider": {
    "path": "platform/components/3-rd-party/ontodia/data/OntodiaSparqlDataProvider.ts",
    "propsSchema": "OntodiaSparqlDataProviderConfig",
    "helpResource": "http://help.metaphacts.com/resource/Ontodia"
  },

  "mp-workspace-layout": {
    "path": "platform/components/3-rd-party/ontodia/workspace/WorkspaceLayout.ts",
    "propsSchema": "WorkspaceLayoutConfig",
    "helpResource": "http://help.metaphacts.com/resource/CSSLayout"
  },
  "mp-workspace-row": {
    "path": "platform/components/3-rd-party/ontodia/workspace/WorkspaceRow.ts",
    "propsSchema": "WorkspaceContainerConfig",
    "helpResource": "http://help.metaphacts.com/resource/CSSLayout"
  },
  "mp-workspace-column": {
    "path": "platform/components/3-rd-party/ontodia/workspace/WorkspaceColumn.ts",
    "propsSchema": "WorkspaceContainerConfig",
    "helpResource": "http://help.metaphacts.com/resource/CSSLayout"
  },
  "mp-workspace-item": {
    "path": "platform/components/3-rd-party/ontodia/workspace/WorkspaceItem.ts",
    "propsSchema": "WorkspaceItemConfig",
    "helpResource": "http://help.metaphacts.com/resource/CSSLayout"
  },

  "mp-copy-to-clipboard": {
    "path": "platform/components/copy-to-clipboard/CopyToClipboardComponent.tsx",
    "propsSchema": "CopyToClipboardConfig",
    "helpResource": "http://help.metaphacts.com/resource/MPComponents"
  },

  "mp-lang-literal": {
    "path": "platform/components/ui/lang-literal/LangLiteral.tsx",
    "deferAttributes": {
      "template": true,
      "no-result-template": true
    }
  },

  "mp-swagger": "platform/components/admin/swagger/Swagger.tsx",
  "mp-swagger-tabs": "platform/components/admin/swagger/SwaggerTabs.tsx",

  "mp-json-renderer": {
    "path": "platform/components/ui/json/json-renderer.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "JsonRendererConfig"
  },
  "mp-file-download": {
    "path": "platform/components/ui/file-download.tsx",
    "propsSchema": "FileDownloadConfig"
  },

  "mp-workflow-create": {
    "path": "platform/components/workflow/WorkflowCreateComponent.tsx",
    "propsSchema": "WorkflowCreateConfig",
    "additionalSchemas": ["WorkflowEventData"],
    "helpResource": "http://help.metaphacts.com/resource/Workflow"
  },
  "mp-workflow-manager": {
    "path": "platform/components/workflow/WorkflowManagerComponent.tsx",
    "propsSchema": "WorkflowManagerConfig",
    "helpResource": "http://help.metaphacts.com/resource/Workflow"
  },
  "mp-workflow-selection-action": {
    "path": "platform/components/workflow/WorkflowSelectionAction.tsx",
    "propsSchema": "WorkflowSelectionActionConfig",
    "helpResource": "http://help.metaphacts.com/resource/Workflow"
  },

  "mp-knowledge-panel": {
    "path": "platform/components/knowledge-panel/KnowledgePanel.tsx",
    "propsSchema": "KnowledgePanelConfig",
    "helpResource": "http://help.metaphacts.com/resource/KnowledgePanel"
  },
  "mp-knowledge-panel-frame": {
    "path": "platform/components/knowledge-panel/KnowledgePanelFrame.tsx",
    "deferAttributes": {
      "template": true
    },
    "propsSchema": "KnowledgePanelFrameConfig",
    "additionalSchemas": ["KnowledgePanelEventData"],
    "helpResource": "http://help.metaphacts.com/resource/KnowledgePanel"
  },
  "mp-knowledge-panel-trigger": {
    "path": "platform/components/knowledge-panel/KnowledgePanelTrigger.tsx",
    "propsSchema": "KnowledgePanelTriggerConfig",
    "helpResource": "http://help.metaphacts.com/resource/KnowledgePanel"
  },

  "bs-row": "react-bootstrap/esm/Row.js",
  "bs-col": "platform/components/compatibility/Bootstrap3Col.tsx",
  "bs-tabs": "react-bootstrap/esm/Tabs.js",
  "bs-tab": "react-bootstrap/esm/Tab.js",
  "bs-tab-container": "react-bootstrap/esm/TabContainer.js",
  "bs-tab-pane": "react-bootstrap/esm/TabPane.js",
  "bs-tab-content": "react-bootstrap/esm/TabContent.js",
  "bs-panel": "platform/components/compatibility/Bootstrap3Panel.tsx",
  "bs-navbar": "react-bootstrap/esm/Navbar.js",
  "bs-navbar-brand": "react-bootstrap/esm/NavbarBrand.js",
  "bs-navbar-collapse": "react-bootstrap/esm/NavbarCollapse.js",
  "bs-navbar-toggle": "react-bootstrap/esm/NavbarToggle.js",
  "bs-nav": "react-bootstrap/esm/Nav.js",
  "bs-nav-item": "react-bootstrap/esm/NavItem.js",
  "bs-nav-link": "react-bootstrap/esm/NavLink.js",
  "bs-nav-dropdown": "react-bootstrap/esm/NavDropdown.js",
  "bs-menu-item": "react-bootstrap/esm/DropdownItem.js",
  "bs-dropdown-item": "react-bootstrap/esm/DropdownItem.js",
  "bs-dropdown-button": "react-bootstrap/esm/DropdownButton.js",
  "bs-dropdown-divider": "platform/components/compatibility/DropdownDivider.ts",
  "bs-alert": "react-bootstrap/esm/Alert.js",
  "bs-dropdown": "react-bootstrap/esm/Dropdown.js",
  "bs-dropdown-menu": "react-bootstrap/esm/DropdownMenu.js",
  "bs-dropdown-toggle": "react-bootstrap/esm/DropdownToggle.js"
}
