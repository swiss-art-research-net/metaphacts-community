/*
 * "Commons Clause" License Condition v1.0
 *
 * The Software is provided to you by the Licensor under the
 * License, as defined below, subject to the following condition.
 *
 * Without limiting other conditions in the License, the grant
 * of rights under the License will not include, and the
 * License does not grant to you, the right to Sell the Software.
 *
 * For purposes of the foregoing, "Sell" means practicing any
 * or all of the rights granted to you under the License to
 * provide to third parties, for a fee or other consideration
 * (including without limitation fees for hosting or
 * consulting/ support services related to the Software), a
 * product or service whose value derives, entirely or substantially,
 * from the functionality of the Software. Any
 * license notice or attribution required by the License must
 * also include this Commons Clause License Condition notice.
 *
 * License: LGPL 2.1 or later
 * Licensor: metaphacts GmbH
 *
 * Copyright (C) 2015-2021, metaphacts GmbH
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, you can receive a copy
 * of the GNU Lesser General Public License from http://www.gnu.org/
 */
@import "~basic-styles.scss";

$default-error-color: red;
$configuration-error-color: #6f6f6f;
$loading-error-color: darkorange;

.cardinality-support {
  display: flex;
  flex-direction: column;

  &__add-value {
    &:focus {
      box-shadow: 0 0 0 0.2rem rgba(193, 193, 193, 0.5);
    }
    &--first { align-self: flex-start; }
    &--another {
      margin-top: 5px;
      align-self: flex-start;
    }
  }

  &__single-instance + &__single-instance,
  &__group-instance + &__group-instance {
    margin-top: 10px;
  }

  &__single-instance {
    display: flex;
    align-items: flex-start;

    .select-text-field,
    .plain-text-field,
    .autocomplete-text-field,
    .date-picker-field {
      flex: 1 1 100%;
    }

    .form-control-feedback {
      position: absolute;
      top: 0;
      right: 0;
      line-height: 39px;
    }
  }

  &__single-instance > &__remove-value {
    flex: 0 0 auto;
    margin-left: 2px;
    margin-top: 2px;
    color: gray;
    border: none;
  }

  &__group-instance {
    display: flex;
    flex-direction: column;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 0.5rem;
    border: 2px solid lightgray;
    border-radius: $input-border-radius;
  }

  &__group-instance > &__remove-value {
    align-self: flex-end;
    color: #D0021B;
  }

  &__reorderable-list-item {
    margin-top: 10px;

    &:first-child {
      margin-top: 0;
    }
  }
}

.plain-text-field {
  &__inputs {
    display: flex;
    > .form-group {
      flex: auto;
      margin-bottom: 0;
    }
  }

  &__text,
  & > :first-child {
    flex-grow: 1;
  }

  &__text {
    border-radius: $input-border-radius;
  }
  &--with-language &__text {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  input.plain-text-field__text {
    height: 36px;
  }

  textarea.plain-text-field__text {
    border-color: #ddd;
    font-size: 15px;
    padding: 6px 10px;
    min-height: 36px;
    width: 100%;
  }

  &__language {
    flex: 60px 0 0;
    > .Select-control {
      border-left: none;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      background: linear-gradient(0deg, #FFFFFF, #F8F8F8);
    }
  }
}

.autocomplete-text-field {
  &__main-row { display: flex; }
  &__select { flex: auto; }
  &__create-button {
    margin-left: 10px;
    border-radius: $input-border-radius;
  }
}

.semantic-form-tree-picker-input {
  display: flex;
  flex-direction: column;
  &__tree-input { display: flex; }
  &__picker { flex: auto; }
  &__create-button {
    margin-left: 10px;
    border-radius: $input-border-radius;
  }
  &__removable-badge { margin-top: 10px; margin-right: 10px; max-width: 200px; }
  &__title { margin-top: 10px; margin-right: 10px; }
}

.date-picker-field {
  &__date-picker > .form-control {
    border-radius: $input-border-radius;
  }
}

.semantic-form-errors {
  &__error-source {
    text-transform: capitalize;
    &:after {
      content: ': ';
    }
  }

  &__error {
    color: $default-error-color;

    &--configuration {
      color: $configuration-error-color;
    }
    &--loading {
      color: $loading-error-color;
    }
  }
}

.semantic-form-input-decorator {
  &--with-header {
    margin: 12px 0;
  }

  &__header {
    margin-bottom: 5px;
  }

  &__label {
    font-weight: bold;
  }

  &__label-required:after {
    content: '*';
  }

  &__description-icon {
    margin-left: 5px;
    text-transform: capitalize;
    @include icon(question-circle);
    color: $text-muted;
  }

  &__spinner {
    left: 10px;
    color: gray;
  }
}

.semantic-form-validation-messages {
  list-style-type: none;
  padding: 0;
  margin: 0;

  &__error {
    color: $default-error-color;

    &--configuration {
      color: $configuration-error-color;
    }
    &--loading {
      color: $loading-error-color;
    }
  }
}

.semantic-form-recover-notification {
  &__discard-data, &__hide, &__discard-data:focus, &__hide:focus, &__discard-data:hover, &__hide:hover{
    background-color: transparent;
    border-color: transparent;
    margin-left: 10px;
    padding: 5px 8px;
  }
}

.semantic-form-checklist-input,
.semantic-form-checkbox-input {
  &_row {
    display: flex;
  }

  &__label {
    cursor: auto;
    font-size: 15px;
    font-weight: normal;
    display: inline-flex;
    flex-direction: row-reverse;
    margin-right: 20px;
  }

  &__input {
    display: none;
  }

  &__input:indeterminate ~ &__checkbox {
    background-color: darkgrey;
    border: 3px #ccc solid;
    cursor: auto;
  }

  &__radio, &__checkbox {
    cursor: pointer;
    position: relative;
    height: 20px;
    width: 20px;
    margin-right: 10px;
    background-color: #ccc;
  }
  &__radio {
    border-radius: 50%;
  }
  &__checkbox {
    border-radius: 0;
  }

  &__input:checked ~ &__radio, &__input:checked ~ &__checkbox {
    background-color: #4679c5;
  }
  &__input:checked ~ &__radio::after, &__input:checked ~ &__checkbox::after {
    content: '';
    position: absolute;
    top: 6px;
    left: 6px;
    width: 8px;
    height: 8px;
    background: white;
  }
  &__input:checked ~ &__checkbox::after {
    border-radius: 0;
  }
  &__input:checked ~ &__radio::after {
    border-radius: 50%;
  }
}

.semantic-form-subject-input {
  /* same as semantic-form-input-decorator--with-header */
  margin: 12px 0;

  &__header {
    display: flex;
  }
  &__label {
    font-weight: bold;
  }
  &__suggest-label {
    margin-left: 5px;
    opacity: 0.8;
  }
}

.form-switch {
  &__content {
    margin-top: $input-padding-y-lg;
  }

  &__select {
    min-width: max-content;
    font-family: inherit;
    font-size: 15px;
  }
}
