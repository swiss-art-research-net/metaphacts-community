{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "BNode": {
            "properties": {
                "termType": {
                    "description": "Contains the constant \"BlankNode\".",
                    "enum": [
                        "BlankNode"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "Blank node name as a string, without any serialization specific prefixes,\ne.g. when parsing,\nif the data was sourced from Turtle, remove _:,\nif it was sourced from RDF/XML, do not change the blank node name (example: blank3).",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "termType",
                "value",
                "equals",
                "hashCode",
                "toString",
                "toJSON"
            ],
            "required": [
                "termType",
                "value"
            ],
            "type": "object"
        },
        "ChartTooltipPoint": {
            "properties": {
                "bindings": {
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/Literal_1"
                            },
                            {
                                "$ref": "#/definitions/BNode"
                            },
                            {
                                "$ref": "#/definitions/Iri<string>"
                            }
                        ]
                    },
                    "description": "Bindings from SPARQL query for the data point.",
                    "propertyOrder": [
                    ],
                    "type": "object"
                },
                "iri": {
                    "description": "Data set IRI (as plain string) for the data point; may be empty.",
                    "type": "string"
                },
                "label": {
                    "description": "Data set label for the data point.",
                    "type": "string"
                },
                "markerClass": {
                    "description": "CSS class for SVG shape to display data set color; may be empty.\n(Provided by Highcharts.)",
                    "type": "string"
                },
                "markerStyle": {
                    "description": "Style string for SVG shape to display data set color; may be empty.\n(Provided by ChartJs.)",
                    "type": "string"
                },
                "value": {
                    "description": "Data point value representation: either a simple number or\ntuple for charts with multiple numerical axes.",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "propertyOrder": [
                "bindings",
                "iri",
                "label",
                "value",
                "markerStyle",
                "markerClass"
            ],
            "required": [
                "bindings",
                "label",
                "value"
            ],
            "type": "object"
        },
        "Iri<string>": {
            "properties": {
                "termType": {
                    "description": "Contains the constant \"NamedNode\".",
                    "enum": [
                        "NamedNode"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The IRI of the named node (example: `http://example.org/resource`)",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "termType",
                "value",
                "equals",
                "hashCode",
                "toString",
                "toJSON"
            ],
            "required": [
                "termType",
                "value"
            ],
            "type": "object"
        },
        "Literal_1": {
            "properties": {
                "datatype": {
                    "$ref": "#/definitions/NamedNode<string>",
                    "description": "A NamedNode whose IRI represents the datatype of the literal."
                },
                "language": {
                    "description": "the language as lowercase BCP47 string (examples: en, en-gb)\nor an empty string if the literal has no language.",
                    "type": "string"
                },
                "termType": {
                    "description": "Contains the constant \"Literal\".",
                    "enum": [
                        "Literal"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The text value, unescaped, without language or type (example: Brad Pitt).",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "termType",
                "value",
                "language",
                "datatype",
                "equals",
                "hashCode",
                "toString",
                "toJSON"
            ],
            "required": [
                "datatype",
                "language",
                "termType",
                "value"
            ],
            "type": "object"
        },
        "NamedNode<string>": {
            "description": "Contains an IRI.",
            "properties": {
                "termType": {
                    "description": "Contains the constant \"NamedNode\".",
                    "enum": [
                        "NamedNode"
                    ],
                    "type": "string"
                },
                "value": {
                    "description": "The IRI of the named node (example: `http://example.org/resource`)",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "termType",
                "value",
                "equals"
            ],
            "required": [
                "termType",
                "value"
            ],
            "type": "object"
        }
    },
    "properties": {
        "category": {
            "description": "Non-numerical value for argument axis (usually x-axis) at selected data points,\ne.g. labels of pie chart segement or bar chart column; may be empty.",
            "properties": {
                "iri": {
                    "description": "Category IRI (as plain string); may be empty.",
                    "type": "string"
                },
                "label": {
                    "description": "Category label.",
                    "type": "string"
                },
                "markerClass": {
                    "description": "CSS class for SVG shape to display category color; may be empty.\n(Provided by Highcharts.)",
                    "type": "string"
                },
                "markerStyle": {
                    "description": "Style string for SVG shape to display category color; may be empty.\n(Provided by ChartJs.)",
                    "type": "string"
                }
            },
            "propertyOrder": [
                "iri",
                "label",
                "markerStyle",
                "markerClass"
            ],
            "required": [
                "label"
            ],
            "type": "object"
        },
        "points": {
            "description": "Numerical values for value axes (usually y-axis, z-axis, etc) at selected data points.",
            "items": {
                "$ref": "#/definitions/ChartTooltipPoint"
            },
            "type": "array"
        }
    },
    "propertyOrder": [
        "category",
        "points"
    ],
    "required": [
        "points"
    ],
    "type": "object"
}

