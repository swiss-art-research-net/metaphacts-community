{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "OntodiaNodeStyle": {
            "properties": {
                "color": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "stylePropertyIri": {
                    "type": "string"
                }
            },
            "propertyOrder": [
                "image",
                "color",
                "stylePropertyIri"
            ],
            "type": "object"
        }
    },
    "description": "The component to display an Ontodia diagram.\n\nThis component **MUST** be wrapped in HTML element with defined height.\nDiagrams are loaded from and saved to `VocabPlatform:OntodiaDiagramContainer` LDP container.\n\nOntodia will listen to `SemanticContext` and will load and save diagram layouts into specified\nrepository; however repository to load data is defined explicitly in data provider.\n\n**Example**: Display component with empty canvas:\n```\n<ontodia></ontodia>\n```\n\n**Example**: Load diagram from resource and display it:\n```\n<ontodia diagram='[[this]]'></ontodia>\n```\n\n**Example**: Display diagram with result elements and links created by construct query:\n```\n<ontodia\n   query='\n     CONSTRUCT { <[[this]]> ?p ?o }\n     WHERE {\n       <[[this]]> ?p ?o\n       FILTER (ISIRI(?o))\n     } LIMIT 50\n'></ontodia>\n```\n\n**Example**: Display diagram with only one element to start with:\n```\n<ontodia iri='http://www.cidoc-crm.org/cidoc-crm/E22_Man-Made_Object'></ontodia>\n```",
    "properties": {
        "addToDefaultSet": {
            "default": false,
            "description": "`true` if persisted component should be added to the default set of the current user",
            "type": "boolean"
        },
        "children": {
            "description": "Custom workspace layout, data provider and authoring config.",
            "properties": {
            },
            "type": "object"
        },
        "defaultDiagram": {
            "description": "Whether the diagram specified with `diagram` is the default diagram.",
            "type": "boolean"
        },
        "defaultDiagramMetadata": {
            "description": "Additional turtle data that will be parsed and attached to the saved default diagram.",
            "type": "string"
        },
        "defaultDiagramName": {
            "description": "If the diagram was not already saved, this is used as the diagram name instead\nof prompting the user.",
            "type": "string"
        },
        "defaultNodeStyle": {
            "$ref": "#/definitions/OntodiaNodeStyle",
            "description": "Default node style to apply to all elements, unless overridden"
        },
        "diagram": {
            "description": "Diagram identifier to display saved diagram.",
            "type": "string"
        },
        "findRelationshipQuery": {
            "description": "SPARQL CONSTRUCT query to find a relationship between two elements.\n\nThe query is expected to return a set of linked triples that should be added\nto the diagram after being sorted to follow from source to target element.\n\nParametrized inputs:\n   - `?in` - source resource;\n   - `?target` - target resource;",
            "type": "string"
        },
        "graph": {
            "description": "Graph to display on initialization.",
            "type": "string"
        },
        "groupBy": {
            "description": "Links to group the nodes",
            "items": {
                "properties": {
                    "linkDirection": {
                        "enum": [
                            "in",
                            "out"
                        ],
                        "type": "string"
                    },
                    "linkType": {
                        "type": "string"
                    }
                },
                "propertyOrder": [
                    "linkType",
                    "linkDirection"
                ],
                "required": [
                    "linkDirection",
                    "linkType"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "hideNavigationConfirmation": {
            "description": "Disable navigation confirmation dialog, resource links will be followed without confirmation.",
            "type": "boolean"
        },
        "id": {
            "description": "Used as source ID for emitted events.",
            "type": "string"
        },
        "iri": {
            "description": "Iri to be used as a single diagram element\nIf property diagram or query is defined, this will be ignored.",
            "type": "string"
        },
        "iris": {
            "description": "Elements to display on initialization",
            "items": {
                "type": "string"
            },
            "type": "array"
        },
        "linkSettings": {
            "description": "Custom options for the links",
            "items": {
                "properties": {
                    "property": {
                        "type": "string"
                    },
                    "showLabel": {
                        "type": "boolean"
                    },
                    "visible": {
                        "type": "boolean"
                    }
                },
                "propertyOrder": [
                    "property",
                    "visible",
                    "showLabel"
                ],
                "required": [
                    "property",
                    "visible"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "metadata": {
            "description": "Additional turtle data that will be parsed and attached to the saved diagram.",
            "type": "string"
        },
        "navigateTo": {
            "description": "URI to navigate after diagram created.\nNewly created diagram IRI will be appended as `diagram` query parameter.",
            "type": "string"
        },
        "nodeStyles": {
            "additionalProperties": {
                "$ref": "#/definitions/OntodiaNodeStyle"
            },
            "description": "Custom images and colors of the elements",
            "propertyOrder": [
            ],
            "type": "object"
        },
        "postSaving": {
            "description": "Controls whether Ontodia should navigate to a newly saved diagram.",
            "enum": [
                "navigate",
                "none"
            ],
            "type": "string"
        },
        "query": {
            "description": "SPARQL query to display data on layout.\nIf property diagram is defined, this property will be ignored.",
            "type": "string"
        },
        "queryParams": {
            "additionalProperties": {
                "type": "string"
            },
            "description": "Query parameters that will be appended to URL after diagram created.",
            "propertyOrder": [
            ],
            "type": "object"
        },
        "queryRepository": {
            "default": "default",
            "description": "Repository which is used to execute SPARQL query specified in `query` property.",
            "type": "string"
        },
        "requestLinksOnInit": {
            "default": "true",
            "description": "Controls if component should re-request all links from data provider when showing existing\ngraph (via loading the diagram or executing CONSTRUCT query):\n   - `true`: if link is not found in the data, it is shown as dashed;\n   - `false`: this setting speeds up initialization and the links on the diagram will\n     be shown exactly as they were when the diagram was saved;\n   - `'dismiss'`: works the same as setting it as `true` and additionally removes all\n     links that were not found in the data;",
            "enum": [
                "dismiss",
                false,
                true
            ]
        }
    },
    "propertyOrder": [
        "id",
        "diagram",
        "query",
        "queryRepository",
        "graph",
        "iri",
        "iris",
        "requestLinksOnInit",
        "metadata",
        "navigateTo",
        "queryParams",
        "addToDefaultSet",
        "nodeStyles",
        "defaultNodeStyle",
        "defaultDiagram",
        "defaultDiagramName",
        "defaultDiagramMetadata",
        "groupBy",
        "linkSettings",
        "findRelationshipQuery",
        "hideNavigationConfirmation",
        "postSaving",
        "children"
    ],
    "type": "object"
}

