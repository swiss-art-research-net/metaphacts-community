{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "data": {
            "description": "Data that will be sent to all targets instead of the original event's data"
        },
        "id": {
            "description": "Used as a source id for re-triggered event",
            "type": "string"
        },
        "onEventSource": {
            "description": "Source component that we listen for events.\nWhen empty will listen for all events of a given type.",
            "type": "string"
        },
        "onEventType": {
            "description": "Type of event to listen to.",
            "type": "string"
        },
        "proxyEventType": {
            "description": "Type of the event that this component triggers when\nreceives event.",
            "type": "string"
        },
        "proxyTargets": {
            "description": "Ids of targets for triggered event.",
            "items": {
                "type": "string"
            },
            "type": "array"
        }
    },
    "propertyOrder": [
        "id",
        "onEventType",
        "onEventSource",
        "proxyEventType",
        "proxyTargets",
        "data"
    ],
    "required": [
        "id",
        "proxyEventType"
    ],
    "type": "object"
}

